---
layout: post
title:  "[0004][nodejs] npm 사용하기"
date:   2019-03-12
---

**0. what is npm?**
<br>
**=> node pakage manager**
<br>
**=> nodejs에서 다양한 모듈들을 사용할 수 있게 해주는 기능**
<br>
<br>
**1. npm 설치하기**
<ul class="circle lm20">
  <li>'npm install [pakage명]' : 패키지명을 입력하면 해당 패키지가 설치됨
    <pre><code class="language-node">> npm install pm2</code></pre>
  </li>
  <li>pakage.json파일이 있는 경로에서 'npm install'<br>
    => pakage.json파일에 설정된 pakage들을 체크하여 자동으로 설치해준다.
    <pre><code class="language-node">> npm install</code></pre>
  </li>
</ul>

**2. pm2(서버관리 패키지) 사용하기**
<ul class="disc lm20">
  <li>pm2 : 프로세스관리패키지(process manager)</li>
  <li>url : http://pm2.keymetrics.io</li>
  <li>프로세스(웹서버)를 편리하게 관리할 수 있다.</li>
  <li>pm2 설치
    <ul class="circle lm30">
      <li>윈도우 : 관리자권한으로 cmd 실행 > 'npm install pm2 -g'
        <pre><code class="language-node">> npm install pm2 -g</code></pre>
      </li>
      <li>리눅스 : 'sudo npm install pm2 -g'<br>
        (* '-g'는 global의 약자로 어디에서는 pm2를 실행가능하게끔 해준다. )
        <pre><code class="language-node">> sudo npm install pm2 -g</code></pre>
      </li>        
    </ul>
  </li>
  <li>pm2 주요명령어
    <ul class="circle lm30">
      <li>웹서버 실행 : 'pm2 start main.js --watch'<br>
        ('--watch'옵션은 hot deploy 기능을 의미함, 'pm2 start main.js'만으로도 서버실행은 가능.)
        <pre><code class="language-node">> pm2 start main.js --watch</code></pre>
      </li>
      <li>웹서버 종료 : 'pm2 stop main'<br>
        ('main'은 서버실행시 표시되는 정보 중 name을 입력.)
        <pre><code class="language-node">> pm2 stop main</code></pre>
      </li>
      <li>웹서버 모니터 : 'pm2 monit'<br>
        (어떤 프로세스가 실행중인지 확인할 수 있다.)
        <pre><code class="language-node">> pm2 monit</code></pre>
      </li> 
      <li>웹서버 로그 확인 : 'pm2 log'<br>
        (어떤 프로세스가 실행중인지 확인할 수 있다.)
        <pre><code class="language-node">> pm2 log</code></pre>
      </li>        
    </ul>
  </li>  
</ul>

**3. Express 사용하기**
<ul class="disc lm20">
  <li>Express : 가장 대표적인 웹프레임워크(WebFrameworks) 중 하나</li>
  <li>url : https://expressjs.com/ko/</li>
  <li>자주사용하는 기본적인 기능들을 포함한 프레임워크이다.</li>
  <li>Express 설치 : 'npm install express -g' 입력<br>
    => express를 전역(-g)에서 사용할 수 있도록 설치
    <pre><code class="language-node">> npm install express -g</code></pre>
  </li>
  <li>'express [app명]' 실행<br>
    => 현재 경로에서 [app명]으로 app를 생성한다.
    => 하위 내용은 자동으로 생성된다.
    <pre><code class="language-node">> express myapp</code></pre>
  </li>
  <li>express 구조
    <ul class="circle lm30">
      <li>package.json : app에서 사용될 모듈들의 정보를 설정하는 파일<br>
        (maven의 pom.xml에서 dependency를 설정하는 것과 유사해보임)
        <pre><code class="language-xml">
  {
  "name": "web2-nodejs",
  "version": "1.0.0",
  "description": "",
  "main": "main.js",
  "directories": {
    "lib": "lib"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/web-n/Nodejs.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/web-n/Nodejs/issues"
  },
  "homepage": "https://github.com/web-n/Nodejs#readme",
  "dependencies": {
    "body-parser": "^1.18.3",
    "compression": "^1.7.3",
    "express": "^4.16.4",
    "sanitize-html": "^1.18.2"
  }
}
</code></pre>
      </li>    
    </ul>
  </li>  
</ul>

**정리**
<div class="summary">
   <ul>
     <li>단 한줄의 명령어로 간단하게 npm을 설치할 수 있다.</li>
     <li>npm은 굉장히 다양해서 많이 사용해봐야 알 것 같다.</li>
   </ul>
</div>
