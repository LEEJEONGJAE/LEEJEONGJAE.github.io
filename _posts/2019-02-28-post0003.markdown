---
layout: post
title:  "[0003][nodejs] nodejs Start(for windows)"
date:   2019-02-28
---

**what is nodejs? => server-side javascript.**
* <span class="lm20">what is nodejs? => server-side javascript.</span>
* <span class="lm20">nodejs 설치</span>
**1. nodejs 설치**
<ul class="circle lm20">
  <li>download url
  <ul class="disc lm30">
    <li>nodejs      : nodejs.org (lts가 더 안정화된 버전)</li>
    <li>atom editor : atom.io (if you have not editor downloading this)</li>
  </ul>
  </li>
  <li>nodejs install : all next and complete.</li>
  <li>설치확인
  <ul class="disc lm30">
    <li>명령어창 실행 > 'node -v'입력 : 설치가 정상적으로 되었다면 nodejs버전정보가 표시된다.</li>
  </ul>
  </li>
</ul>
```node
> node -v
```     
    
**2. 웹서버 구축하기**

<ul class="circle lm20">
  <li>프로젝트 패키지 생성</li>
  <li>프로젝트패키지에 main.js 파일 생성</li>
  <li>main.js</li>
</ul>

```node
var http = require('http'); //  Http
var fs = require('fs');     //  FileSystem

//Server configration
var app = http.createServer(function(request,response){
    var url = request.url;

    //default url setting
    if(request.url == '/'){
      url = '/index.html';  //default url
    }

    //favicon : favorites + icon : inference icon(like thumbnail)
    if(request.url == '/favicon.ico'){
      return response.writeHead(404); //404: not found
    }
    
    response.writeHead(200); // OK

    response.end(fs.readFileSync(__dirname + url)); //page read(load)
    //fs.readFileSync(__dirname + url) : '__dirname + url'path file read
    //response.end('[content]') display '[content]' in webbrower

});
app.listen(3000); // port number (ex. http://localhost:3000)
```

**3. npm 사용하기**

<ul class="circle lm20">
  <li>npm : node pakage manager
  <ul class="disc lm30">
    <li>url : http://pm2.keymetrics.io</li>
    <li>pm2 설치
      <ul class="circle lm40">
        <li>윈도우 : 관리자권한으로 cmd 실행 > 'npm install pm2 -g'
          <pre>
            <code class="language-node">
                > npm install pm2 -g
            </code>
          </pre>
        </li>
        <li>리눅스 : 'sudo npm install pm2 -g'<br>
          (* '-g'는 global의 약자로 어디에서는 pm2를 실행가능하게끔 해준다. )
          <pre>
            <code class="language-node">
                > sudo npm install pm2 -g
            </code>
          </pre>
        </li>        
      </ul>
    </li>
  </ul>
  </li>
  <li>nodejs install : all next and complete.</li>
  <li>설치확인
  <ul class="disc lm30">
    <li>명령어창 실행 > 'node -v'입력 : 설치가 정상적으로 되었다면 nodejs버전정보가 표시된다.</li>
  </ul>
  </li>
</ul>


- pm2 주요명령어
   - 웹서버 실행 : 'pm2 start main.js --watch'
     ('--watch'옵션은 hot deploy 기능을 의미함, 'pm2 start main.js'만으로도 서버실행은 가능.)
   ```node
   pm2 start main.js --watch
   ```
   
   - 웹서버 종료 : 'pm2 stop main'
     ('main'은 서버실행시 표시되는 정보 중 name을 입력.)

   ```node
   pm2 stop main
   ```
   
   - 웹서버 모니터 : 'pm2 monit' (어떤 프로세스가 실행중인지 확인할 수 있다.)
   ```node
   pm2 monit
   ```
   
   - 웹서버 로그 확인 : 'pm2 log'
   ```node
   pm2 log
   ```

**정리**
<div class="summary">
   <ul>
     <li>일단 복/붙. 내용정리 및 추가가 필요함.</li>
     <li>nodejs 설치는 windows 상으로 매우 간단하다.</li>
     <li>웹서버구축 또한 간단한 js소스로 구현할 수 있다.</li>
     <li>npm은 굉장히 다양해서 많이 사용해봐야 알 것 같다.</li>
     <li>nodejs를 처음 맛본 느낌은 javascript기반이라서 그런지 자바에 비해 훨씬 가볍고 겨우 저정도 설정으로 웹서버가 실행되나 싶을 정도이다.</li>
   </ul>
</div>
