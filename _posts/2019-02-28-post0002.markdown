---
layout: post
title:  "[0002][JAVA] AES128 Util"
date:   2019-02-28
---

**0. AES암호화**
<ul class="circle lm20">
  <li>AES암호화는 128bit, 256bit 두가지방식으로 나뉜다.</li>
  <li>암/복호화시에는 암호화key가 필요하며, 암호화키의 길이는 각각 128bit(16Byte), 256bit(32Byte)이다.</li>
  <li>AES256 필수library
    <ul class="disc lm30">
      <li>commons-codec-1.10.jar : '프로젝트 라이브러리 경로/'에 복사</li>
      <li>Java JCE Policy(local_policy.jar, US_export_policy.jar) 추가
	  => jdk버전에 맞게 다운로드 후 '${JAVA_HOME}/jre/lib/security/'에 'local_policy.jar', 'US_export_policy.jar' 복사
        <ul class="circle lm30">
	  <li>jdk1.6 : https://www.oracle.com/technetwork/java/javase/downloads/jce-6-download-429243.html</li>
	  <li>jdk1.7 : https://www.oracle.com/technetwork/java/javase/downloads/jce-7-download-432124.html</li>
	  <li>jdk1.8 : https://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>
<br>
**1. Java 샘플소스**
<pre class="prettyprint">
package ljj.com.otnweo;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;

public class AES128Utils {
	
	/** AES128 암호화키 (16자리) */
	public static String key = "TEST123456789012";
	
	/**
	 * AES128 암호화
	 * @param toencrypt
	 * @param secretKey
	 * @return
	 * @throws Exception
	 */
    public static byte[] encrypt(byte[] toencrypt) throws Exception {

        SecretKeySpec skeySpec = new SecretKeySpec(key.getBytes("UTF-8"), "AES");

        Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");

        cipher.init(Cipher.ENCRYPT_MODE, skeySpec);

        byte[] encrypted = cipher.doFinal(toencrypt);

        return encrypted;

    }
    
    /**
     * AES128 복호화
     * @param encrypted
     * @return
     * @throws Exception
     */
     
    public static byte[] decrypt( byte[] encrypted) throws Exception {

        SecretKeySpec skeySpec = new SecretKeySpec(key.getBytes("UTF-8"), "AES");

        Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");

        cipher.init(Cipher.DECRYPT_MODE, skeySpec);

        byte[] decrypted = cipher.doFinal(encrypted);

        return decrypted;

    }    

}
</pre>
<br>
**99. 정리**
<ul class="circle lm20">
  <li>AES256 업데이트 예정</li>
</ul>
